{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Formik, Field } from \"formik\";\nimport TextField from \"./TextField\";\nimport { useRouter } from 'next/router';\nimport Button from \"./Button\";\nimport { ArrowRightIcon } from \"@heroicons/react/outline\";\nimport userService from \"../services/userService\";\n\nvar LogInForm = function LogInForm() {\n  var router = useRouter();\n  return /*#__PURE__*/_jsx(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      userService.LogInUser(values).then(function (token) {\n        if (token.status == 200) {\n          document.cookie = \"token=\".concat(token.data);\n          router.push('/dashboard');\n        } else {\n          window.location.reload();\n        }\n      })[\"catch\"](function () {\n        return window.location.reload();\n      });\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n\n      if (!values.password) {\n        errors.password = \"Please enter your password!\";\n      }\n\n      if (!values.username) {\n        errors.username = \"Please enter your username!\";\n      } else if (values.username.length > 20) {\n        errors.username = \"Username must be less than 20 characters\";\n      }\n\n      return errors;\n    },\n    children: function children(_ref2) {\n      var values = _ref2.values,\n          errors = _ref2.errors,\n          touched = _ref2.touched,\n          handleChange = _ref2.handleChange,\n          handleBlur = _ref2.handleBlur,\n          handleSubmit = _ref2.handleSubmit,\n          isSubmitting = _ref2.isSubmitting;\n      return /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-cols-2 gap-5\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"h-16 col-span-2\",\n            children: [/*#__PURE__*/_jsx(Field, {\n              errors: errors.username && touched.username && errors.username,\n              name: \"username\",\n              placeholder: \"Username\",\n              type: \"input\",\n              as: TextField\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"text-xs m-px text-red-500\",\n              children: errors.username && touched.username && errors.username\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"h-16 col-span-2\",\n            children: [/*#__PURE__*/_jsx(Field, {\n              errors: errors.email && touched.email && errors.email,\n              name: \"email\",\n              placeholder: \"Email\",\n              type: \"email\",\n              as: TextField\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"text-xs m-px text-red-500\",\n              children: errors.email && touched.email && errors.email\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"h-16 col-span-2\",\n            children: [/*#__PURE__*/_jsx(Field, {\n              errors: errors.password && touched.password && errors.password,\n              name: \"password\",\n              placeholder: \"Password\",\n              type: \"password\",\n              as: TextField\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"text-xs m-px text-red-500\",\n              children: errors.password && touched.password && errors.password\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"w-full grid mt-5\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"flex justify-center\",\n            children: /*#__PURE__*/_jsx(Button, {\n              color: \"green-300\",\n              disabled: isSubmitting,\n              type: \"submit\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"flex items-center\",\n                children: /*#__PURE__*/_jsx(ArrowRightIcon, {\n                  className: \"h-5 w-5\"\n                })\n              })\n            })\n          })\n        })]\n      });\n    }\n  });\n};\n\nexport default LogInForm;","map":null,"metadata":{},"sourceType":"module"}