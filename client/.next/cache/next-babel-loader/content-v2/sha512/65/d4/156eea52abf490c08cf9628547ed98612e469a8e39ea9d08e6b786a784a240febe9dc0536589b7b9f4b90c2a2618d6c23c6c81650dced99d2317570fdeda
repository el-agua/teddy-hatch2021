{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ddz/Desktop/funzos/teddy/pages/doctor.tsx\",\n    _this = this;\n\nimport Card from \"../components/Card\";\nimport NavBar from \"../components/NavBar\";\nimport Link from \"next/link\";\nimport Button from \"../components/Button\";\nimport Column from \"../components/Column\";\n\nfunction PredictionFixer(pred) {\n  switch (pred) {\n    case -1:\n      return \"No Recommendation\";\n\n    case 0:\n      return \"Low Risk\";\n\n    case 1:\n      return \"Moderate Risk\";\n\n    case 2:\n      return \"Strong Risk\";\n\n    default:\n      return \"No Recommendation\";\n  }\n}\n\n_c = PredictionFixer;\n\nvar Doctor = function Doctor(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-7 justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              color: \"red-400\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-6xl text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: props.userData ? props.userData.username : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 88\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 51\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Doctor Portal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 194\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 158\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            round: \"rounded-tl-lg\",\n            label: \"Patient\",\n            rows: props.patientData.map(function (patient) {\n              return patient.user.username;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Email\",\n            rows: props.patientData.map(function (patient) {\n              return patient.user.email;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Ethnicity\",\n            rows: props.patientData.map(function (patient) {\n              return patient.ethnicity;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Diagnosis Age\",\n            rows: props.patientData.map(function (patient) {\n              return patient.cancer_dx;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Cancer\",\n            rows: props.patientData.map(function (patient) {\n              return patient.cancer_dx_type;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Age\",\n            rows: props.patientData.map(function (patient) {\n              return patient.cancer_dx_age;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Prediction\",\n            rows: props.patientData.map(function (patient) {\n              return PredictionFixer(patient.prediction);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            round: \"rounded-tr-lg\",\n            label: \"History\",\n            rows: props.patientData.map(function (patient) {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                color: \"purple-500\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/relation/\".concat(patient.id),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 183\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 144\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 117\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = Doctor;\nexport var __N_SSP = true;\nexport default Doctor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PredictionFixer\");\n$RefreshReg$(_c2, \"Doctor\");","map":{"version":3,"sources":["/Users/ddz/Desktop/funzos/teddy/pages/doctor.tsx"],"names":["Card","NavBar","Link","Button","Column","PredictionFixer","pred","Doctor","props","userData","username","patientData","map","patient","user","email","ethnicity","cancer_dx","cancer_dx_type","cancer_dx_age","prediction","id"],"mappings":"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","sourcesContent":["import Card from \"../components/Card\";\nimport NavBar from \"../components/NavBar\";\nimport HistoryChange from \"../components/HistoryChange\"\nimport { FC } from \"react\"\nimport SignUpForm from \"../components/SignUpForm\"\nimport History from \"../components/History\"\nimport Select from \"../components/Select\"\nimport Link from \"next/link\"\nimport Button from \"../components/Button\"\nimport Column from \"../components/Column\"\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\"\nfunction PredictionFixer(pred: number): string {\n    switch (pred) {\n        case -1:\n            return \"No Recommendation\"\n        case 0:\n            return \"Low Risk\"\n        case 1:\n            return \"Moderate Risk\"\n        case 2:\n            return \"Strong Risk\"\n        default:\n            return \"No Recommendation\"\n    }\n}\nconst Doctor: FC = (props: any) => {\n    return (\n        <div>\n            <NavBar userData={props.userData}></NavBar>\n            <div className=\"flex p-7 justify-center\">\n\n                <div>\n                    <div className=\"flex justify-center\">\n                        <div className=\"w-1/2 mb-4\">\n                            <Card color=\"red-400\"><div className=\"text-6xl text-white\"><strong>{props.userData ? props.userData.username : \"\"}</strong></div><div className=\"text-xl text-white\"><strong>Doctor Portal</strong></div></Card>\n                        </div>\n                    </div>\n                    <div className=\"flex\">\n                        <Column round=\"rounded-tl-lg\" label=\"Patient\" rows={props.patientData.map((patient: any) => patient.user.username)}></Column>\n                        <Column label=\"Email\" rows={props.patientData.map((patient: any) => patient.user.email)}></Column>\n                        <Column label=\"Ethnicity\" rows={props.patientData.map((patient: any) => patient.ethnicity)}></Column>\n                        <Column label=\"Diagnosis Age\" rows={props.patientData.map((patient: any) => patient.cancer_dx)}></Column>\n                        <Column label=\"Cancer\" rows={props.patientData.map((patient: any) => patient.cancer_dx_type)}></Column>\n                        <Column label=\"Age\" rows={props.patientData.map((patient: any) => patient.cancer_dx_age)}></Column>\n                        <Column label=\"Prediction\" rows={props.patientData.map((patient: any) => PredictionFixer(patient.prediction))}></Column>\n                        <Column round=\"rounded-tr-lg\" label=\"History\" rows={props.patientData.map((patient: any) => <Button color=\"purple-500\"><Link href={`/relation/${patient.id}`}><div className=\"text-sm\">View</div></Link></Button>)}></Column>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\nexport async function getServerSideProps(context: any) {\n    const cookies = context.req.headers.cookie;\n    if (cookies == undefined) {\n        return { redirect: { destination: \"/login\", permanent: false } }\n    }\n    var tok = cookies.substring(6)\n    var data: any\n    var patientData: any\n    if (tok != undefined && tok != \"undefined\") {\n        var decoded: any = jwt_decode(tok);\n        var id = decoded.user_id\n        console.log(\"I'm here\")\n        await axios.get(`https://api.demo.federico.codes/users/${id}`, {\n            headers: {\n                'Authorization': `${tok}`\n            }\n        }).then((user) => {\n            data = user.data\n        }).catch(e => console.log(e))\n        if (data.admin == 0) {\n            return { redirect: { destination: \"/dashboard\", permanent: false } }\n        }\n        await axios.get(`https://api.demo.federico.codes/patients`, {\n            headers: {\n                'Authorization': `${tok}`\n            }\n        }).then((user) => {\n            patientData = user.data\n        }).catch(e => console.log(e))\n    } else {\n        return { redirect: { destination: \"/login\", permanent: false } }\n    }\n    console.log(patientData)\n    if (patientData.length == 0) {\n        return { props: { userData: data, patientData: patientData } }\n    } else {\n        return {\n            props: { userData: data, patientData: patientData }, // will be passed to the page component as props\n        }\n    }\n}\nexport default Doctor;\n"]},"metadata":{},"sourceType":"module"}