{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ddz/Desktop/funzos/teddy/pages/doctor.tsx\";\nimport Card from \"../components/Card\";\nimport NavBar from \"../components/NavBar\";\nimport Link from \"next/link\";\nimport Button from \"../components/Button\";\nimport Column from \"../components/Column\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\n\nfunction PredictionFixer(pred) {\n  switch (pred) {\n    case -1:\n      return \"No Recommendation\";\n\n    case 0:\n      return \"Low Risk\";\n\n    case 1:\n      return \"Moderate Risk\";\n\n    case 2:\n      return \"Strong Risk\";\n\n    default:\n      return \"No Recommendation\";\n  }\n}\n\nconst Doctor = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      userData: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-7 justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              color: \"red-400\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-6xl text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: props.userData ? props.userData.username : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Doctor Portal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 194\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 158\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            round: \"rounded-tl-lg\",\n            label: \"Patient\",\n            rows: props.patientData.map(patient => patient.user.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Email\",\n            rows: props.patientData.map(patient => patient.user.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Ethnicity\",\n            rows: props.patientData.map(patient => patient.ethnicity)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Diagnosis Age\",\n            rows: props.patientData.map(patient => patient.cancer_dx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Cancer\",\n            rows: props.patientData.map(patient => patient.cancer_dx_type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Age\",\n            rows: props.patientData.map(patient => patient.cancer_dx_age)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            label: \"Prediction\",\n            rows: props.patientData.map(patient => PredictionFixer(patient.prediction))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            round: \"rounded-tr-lg\",\n            label: \"History\",\n            rows: props.patientData.map(patient => /*#__PURE__*/_jsxDEV(Button, {\n              color: \"purple-500\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: `/relation/${patient.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm\",\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 183\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 144\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 117\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const cookies = context.req.headers.cookie;\n\n  if (cookies == undefined) {\n    return {\n      redirect: {\n        destination: \"/login\",\n        permanent: false\n      }\n    };\n  }\n\n  var tok = cookies.substring(6);\n  var data;\n  var patientData;\n\n  if (tok != undefined && tok != \"undefined\") {\n    var decoded = jwt_decode(tok);\n    var id = decoded.user_id;\n    console.log(\"I'm here\");\n    await axios.get(`https://api.demo.federico.codes/users/${id}`, {\n      headers: {\n        'Authorization': `${tok}`\n      }\n    }).then(user => {\n      data = user.data;\n    }).catch(e => console.log(e));\n\n    if (data.admin == 0) {\n      return {\n        redirect: {\n          destination: \"/dashboard\",\n          permanent: false\n        }\n      };\n    }\n\n    await axios.get(`https://api.demo.federico.codes/patients`, {\n      headers: {\n        'Authorization': `${tok}`\n      }\n    }).then(user => {\n      patientData = user.data;\n    }).catch(e => console.log(e));\n  } else {\n    return {\n      redirect: {\n        destination: \"/login\",\n        permanent: false\n      }\n    };\n  }\n\n  console.log(patientData);\n\n  if (patientData.length == 0) {\n    return {\n      props: {\n        userData: data,\n        patientData: patientData\n      }\n    };\n  } else {\n    return {\n      props: {\n        userData: data,\n        patientData: patientData\n      } // will be passed to the page component as props\n\n    };\n  }\n}\nexport default Doctor;","map":{"version":3,"sources":["/Users/ddz/Desktop/funzos/teddy/pages/doctor.tsx"],"names":["Card","NavBar","Link","Button","Column","jwt_decode","axios","PredictionFixer","pred","Doctor","props","userData","username","patientData","map","patient","user","email","ethnicity","cancer_dx","cancer_dx_type","cancer_dx_age","prediction","id","getServerSideProps","context","cookies","req","headers","cookie","undefined","redirect","destination","permanent","tok","substring","data","decoded","user_id","console","log","get","then","catch","e","admin","length"],"mappings":"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","sourcesContent":["import Card from \"../components/Card\";\nimport NavBar from \"../components/NavBar\";\nimport HistoryChange from \"../components/HistoryChange\"\nimport { FC } from \"react\"\nimport SignUpForm from \"../components/SignUpForm\"\nimport History from \"../components/History\"\nimport Select from \"../components/Select\"\nimport Link from \"next/link\"\nimport Button from \"../components/Button\"\nimport Column from \"../components/Column\"\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\"\nfunction PredictionFixer(pred: number): string {\n    switch (pred) {\n        case -1:\n            return \"No Recommendation\"\n        case 0:\n            return \"Low Risk\"\n        case 1:\n            return \"Moderate Risk\"\n        case 2:\n            return \"Strong Risk\"\n        default:\n            return \"No Recommendation\"\n    }\n}\nconst Doctor: FC = (props: any) => {\n    return (\n        <div>\n            <NavBar userData={props.userData}></NavBar>\n            <div className=\"flex p-7 justify-center\">\n\n                <div>\n                    <div className=\"flex justify-center\">\n                        <div className=\"w-1/2 mb-4\">\n                            <Card color=\"red-400\"><div className=\"text-6xl text-white\"><strong>{props.userData ? props.userData.username : \"\"}</strong></div><div className=\"text-xl text-white\"><strong>Doctor Portal</strong></div></Card>\n                        </div>\n                    </div>\n                    <div className=\"flex\">\n                        <Column round=\"rounded-tl-lg\" label=\"Patient\" rows={props.patientData.map((patient: any) => patient.user.username)}></Column>\n                        <Column label=\"Email\" rows={props.patientData.map((patient: any) => patient.user.email)}></Column>\n                        <Column label=\"Ethnicity\" rows={props.patientData.map((patient: any) => patient.ethnicity)}></Column>\n                        <Column label=\"Diagnosis Age\" rows={props.patientData.map((patient: any) => patient.cancer_dx)}></Column>\n                        <Column label=\"Cancer\" rows={props.patientData.map((patient: any) => patient.cancer_dx_type)}></Column>\n                        <Column label=\"Age\" rows={props.patientData.map((patient: any) => patient.cancer_dx_age)}></Column>\n                        <Column label=\"Prediction\" rows={props.patientData.map((patient: any) => PredictionFixer(patient.prediction))}></Column>\n                        <Column round=\"rounded-tr-lg\" label=\"History\" rows={props.patientData.map((patient: any) => <Button color=\"purple-500\"><Link href={`/relation/${patient.id}`}><div className=\"text-sm\">View</div></Link></Button>)}></Column>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\nexport async function getServerSideProps(context: any) {\n    const cookies = context.req.headers.cookie;\n    if (cookies == undefined) {\n        return { redirect: { destination: \"/login\", permanent: false } }\n    }\n    var tok = cookies.substring(6)\n    var data: any\n    var patientData: any\n    if (tok != undefined && tok != \"undefined\") {\n        var decoded: any = jwt_decode(tok);\n        var id = decoded.user_id\n        console.log(\"I'm here\")\n        await axios.get(`https://api.demo.federico.codes/users/${id}`, {\n            headers: {\n                'Authorization': `${tok}`\n            }\n        }).then((user) => {\n            data = user.data\n        }).catch(e => console.log(e))\n        if (data.admin == 0) {\n            return { redirect: { destination: \"/dashboard\", permanent: false } }\n        }\n        await axios.get(`https://api.demo.federico.codes/patients`, {\n            headers: {\n                'Authorization': `${tok}`\n            }\n        }).then((user) => {\n            patientData = user.data\n        }).catch(e => console.log(e))\n    } else {\n        return { redirect: { destination: \"/login\", permanent: false } }\n    }\n    console.log(patientData)\n    if (patientData.length == 0) {\n        return { props: { userData: data, patientData: patientData } }\n    } else {\n        return {\n            props: { userData: data, patientData: patientData }, // will be passed to the page component as props\n        }\n    }\n}\nexport default Doctor;\n"]},"metadata":{},"sourceType":"module"}