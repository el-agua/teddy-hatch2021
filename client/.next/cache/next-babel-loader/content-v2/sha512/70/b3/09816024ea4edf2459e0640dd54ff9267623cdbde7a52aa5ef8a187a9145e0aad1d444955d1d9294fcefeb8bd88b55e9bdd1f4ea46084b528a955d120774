{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Card from \"../../components/Card\";\nimport axios from \"axios\";\nimport NavBar from \"../../components/NavBar\";\nimport Button from \"../../components/Button\";\nimport jwt_decode from \"jwt-decode\";\nimport patientService from \"../../services/patientService\";\n\nconst Relation = props => {\n  var router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  useEffect(() => {\n    patientService.GetPatientByID(props.token, parseInt(id)).then(patient => {\n      console.log(patient);\n      setData(patient.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(NavBar, {\n      userData: props.userData\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"p-7\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Button, {\n              color: \"blue-500\",\n              children: /*#__PURE__*/_jsx(Link, {\n                href: \"/doctor\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"text-white\",\n                  children: \"Back\"\n                })\n              })\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsxs(Card, {\n              color: \"green-300\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"text-6xl text-white\",\n                children: /*#__PURE__*/_jsx(\"strong\", {\n                  children: data ? data.user.username : \"\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"text-xl text-white\",\n                children: /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"Hereditary History\"\n                })\n              })]\n            }), data ? data.rel_relation.map((patient, index) => /*#__PURE__*/_jsx(\"div\", {\n              className: \"mt-3 text-2xl\",\n              children: /*#__PURE__*/_jsxs(Card, {\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  children: [\"Relationship: \", /*#__PURE__*/_jsx(\"strong\", {\n                    children: patient\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  children: [\"Cancer Type: \", /*#__PURE__*/_jsx(\"strong\", {\n                    children: data.rel_cancer[index]\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  children: [\"Diagnosis Age: \", /*#__PURE__*/_jsx(\"strong\", {\n                    children: data.rel_age[index]\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {})]\n              })\n            }, index)) : /*#__PURE__*/_jsx(\"div\", {})]\n          })]\n        })\n      })\n    })]\n  });\n};\n\nexport async function getServerSideProps(context) {\n  const cookies = context.req.headers.cookie;\n\n  if (cookies == undefined) {\n    return {\n      redirect: {\n        destination: \"/login\",\n        permanent: false\n      }\n    };\n  }\n\n  var tok = cookies.substring(6);\n  var data = \"\";\n\n  if (tok != undefined && tok != \"undefined\") {\n    var decoded = jwt_decode(tok);\n    var id = decoded.user_id;\n    console.log(\"I'm here\");\n    await axios.get(`https://api.demo.federico.codes/users/${id}`, {\n      headers: {\n        'Authorization': `${tok}`\n      }\n    }).then(user => {\n      data = user.data;\n      console.log(data);\n    }).catch(e => console.log(e));\n  } else {\n    return {\n      redirect: {\n        destination: \"/login\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      userData: data,\n      token: tok\n    } // will be passed to the page component as props\n\n  };\n}\nexport default Relation;","map":null,"metadata":{},"sourceType":"module"}