{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport NavBar from \"../components/NavBar\";\nimport History from \"../components/History\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\n\nconst Dashboard = props => {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(NavBar, {\n      userData: props.userData\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"p-7\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(History, {\n            patientData: props.patientData,\n            userData: props.userData\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {})]\n      })\n    })]\n  });\n};\n\nexport async function getServerSideProps(context) {\n  const cookies = context.req.headers.cookie;\n\n  if (cookies == undefined) {\n    return {\n      redirect: {\n        destination: \"/login\",\n        permanent: false\n      }\n    };\n  }\n\n  var tok = cookies.substring(6);\n  var data;\n  var patientData;\n\n  if (tok != undefined && tok != \"undefined\") {\n    var decoded = jwt_decode(tok);\n    var id = decoded.user_id;\n    console.log(\"I'm here\");\n    await axios.get(`https://api.demo.federico.codes/users/${id}`, {\n      headers: {\n        'Authorization': `${tok}`\n      }\n    }).then(user => {\n      data = user.data;\n      console.log(data);\n    }).catch(e => console.log(e));\n\n    if (data.admin == 1) {\n      return {\n        redirect: {\n          destination: \"/doctor\",\n          permanent: false\n        }\n      };\n    }\n\n    await axios.get(`https://api.demo.federico.codes/patients`, {\n      headers: {\n        'Authorization': `${tok}`\n      }\n    }).then(user => {\n      patientData = user.data;\n    }).catch(e => console.log(e));\n  } else {\n    return {\n      redirect: {\n        destination: \"/login\",\n        permanent: false\n      }\n    };\n  }\n\n  console.log(patientData);\n\n  if (patientData.length == 0) {\n    return {\n      props: {\n        userData: data,\n        patientData: {\n          prediction: -1\n        }\n      }\n    };\n  } else {\n    return {\n      props: {\n        userData: data,\n        patientData: patientData[patientData.length - 1]\n      } // will be passed to the page component as props\n\n    };\n  }\n}\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}